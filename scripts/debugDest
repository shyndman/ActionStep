#!/usr/bin/env ruby

require 'socket'

class Debugger
  attr_accessor :port, :proc, :sessions
  
  def initialize(autostart=true, port=4500)
    @port = port
    @sessions = {}
    start if autostart
  end
  
  def start
    puts "Starting ActionStep debugger on port: #{@port}"
    server = TCPServer.new('0.0.0.0', @port)
    @thread = Thread.new do
      loop do
        handle_socket(server.accept)
      end
    end
    sleep 1
  end
  
  def handle_socket(socket)
    puts "Got Debugging Connection..."
    Thread.new(socket) do |socket|
      loop do
        message = socket.gets("\0")
        break unless message
        if message.include?("DEBUG_OUTPUT")
          $DEBUGGER = socket
        end
        if $DEBUGGER && $DEBUGGER != socket
          $DEBUGGER.send(message+"\0", 0) 
        else
          puts message
        end
      end
      puts "_________/ Debugger connection close \__________ "
    end
  end
  
  def stop
    @thread.stop
  end
  
  def wait_until_done
    @thread.join
  end
  
  def start_and_wait
    start
    wait_until_done
  end
end

if $0 == __FILE__
  debugger = Debugger.new
  debugger.wait_until_done
end