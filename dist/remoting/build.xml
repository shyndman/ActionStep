<!--
This Ant build file contains the following (non-internal) targets, sorted by order of importance:
  * remoting-lib: compiles ${dest-lib}
  * remoting-dest: compile ${dest-main}
  * exec-asigen: generate intriniscs by executing asigen
  * create-zip: produces ANSRemoting.zip containing barest set of files

Some targets do not contain descriptions so that they will be classified as "internal" and will
not be displayed in most Ant wrappers.

Internal targets include:
  * init: outputs the current time, useful for debugging
  * compile: generic ${cc} wrapper
  * slurp-det: determine if intrinsic generation is needed by comparing ${slurp-src}
     and ${slurp-dest}
  * slurp-get: extract file names for intrinsic generation
  * slurp-exec: run asigen

You need the following executables:
  * mtasc: www.mtasc.org/#download
  * asigen: http://dynamicflash.com/downloads/asigen/nightly/asigen-20060222.zip
  * (optional) hamtasc: http://osflash.org/hamtasc/#downloads_uploads

asigen was used instead of hamtasc, because we don't want intrinsics generated for dependent
classes; we only want them for those that we specify.

@author Tay Ray Chuan
-->
<project name="ANS-Remoting" basedir=".">
	<!-- Global Properties -->
	<property name="cc" value="mtasc.exe"/>
	<property name="asigen" value="asigen.exe"/>
	<property name="actionstep" location="../../"/>
	<property name="trace" value="org.actionstep.ASDebugger.trace"/>

	<property name="dest-lib" value="${basedir}\ANSRemotingLib.swf"/>
	<property name="dest-main" value="${basedir}\Main.swf"/>

	<!--
	Helper targets. They are, strictly speaking, not neccesary and merely reduce code duplication.
	-->
	<target name="init">
		<tstamp>
			<format property="TSTAMP" pattern="hh:mm:ss"/>
		</tstamp>
		<echo>${TSTAMP} ${TODAY}</echo>
	</target>

	<target name="compile" depends="init">
		<exec executable="${cc}" dir=".">
			<arg line="
				-strict
				-version 8
				-trace ${trace}
				-wimp
				${args}"/>
		</exec>
	</target>

	<target name="create-zip" description="Creates zip file for distribution">
		<zip destfile="${basedir}/ANSRemoting.zip" casesensitive="true">
			<fileset dir="${actionstep}" includes="LICENSE" casesensitive="true"/>
			<zipfileset dir="${basedir}/dist-asi" prefix="dist-asi"/>
			<fileset dir="${basedir}" includes="
				readme.txt ANSRemotingLib.swf ASTestRemotingDist.as
				lib-asi.files lib-asi.exclude lib-asi.include
				original.exclude
				build.xml
			"/>
		</zip>
	</target>

	<!--
	swf-related targets. swfs are generated by them, including ${dest-lib} and ${dest-main}.
	-->
	<target name="remoting-lib" description="Compiles the ActionStep remoting library" depends="init">
		<antcall target="compile">
			<param name="args" value="
	-cp '${actionstep}\src'
	-cp '${basedir}\lib-asi'
	-swf '${dest-lib}'
	ASTestRemotingDist.as
	-header 1:1:1
	-exclude lib-asi.exclude
			"/>
		</antcall>
	</target>

	<target name="remoting-dist" description="Compiles test(s) for the remoting library">
		<antcall target="compile">
			<param name="args" value="
	-cp '${basedir}\dist-asi'
	-swf '${dest-main}'
	-main ASTestRemotingDist.as
	-header 550:400:10
			"/>
		</antcall>
	</target>

	<!--
	slurp-* targets: Gets information from various files for intrinsic-related operations.

	Unspecified properties:
	  * slurp-needs-exec: set by <uptodate> in slurp-det
	  * asi-excludes: contains file names separated by spaces, set in slurp-get
	-->
	<property name="slurp-src" value="${basedir}/original.exclude"/>
	<property name="slurp-dest" value="${basedir}/asi-excludes.temp"/>

	<target name="slurp-det">
		<uptodate property="slurp-needs-exec"
			srcfile="${slurp-src}"
			targetfile="${slurp-dest}"/>
	</target>

	<target name="slurp-exec" unless="slurp-needs-exec">
		<loadfile property="slurp-temp" srcfile="${slurp-src}">
			<filterchain>
				<ignoreblank byline="true"/>
				<replacestring from="." to="/"/>
				<replacestring from="org/actionstep/" to=""/>
				<replaceregex flags="g" pattern="$" replace=".as "/>
				<striplinebreaks/>
			</filterchain>
		</loadfile>
		<echo file="${slurp-dest}">${slurp-temp}</echo>
	</target>

	<target name="slurp-get">
		<loadfile property="asi-excludes" srcfile="${slurp-dest}"/>
	</target>

	<target name="exec-asigen" description="Generates intriniscs" depends="slurp-det, slurp-exec, slurp-get">
		<exec executable="${asigen}" dir="${actionstep}/src/org/actionstep">
			<arg line="
				-o '${basedir}\intrinsics' ${asi-excludes}
			"/>
		</exec>
		<!-- create 2 different directories -->
		<copy todir="${basedir}\lib-asi">
			<fileset dir="${basedir}\intrinsics"/>
		</copy>
		<loadfile property="asi-includes" srcfile="${basedir}\lib-asi.include"/>
		<delete>
			<fileset dir="${basedir}\lib-asi\org\actionstep" includes="${asi-includes}"/>
		</delete>
		<move todir="${basedir}\dist-asi">
			<fileset dir="${basedir}\intrinsics"/>
		</move>
	</target>
</project>
