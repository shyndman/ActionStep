== Summary ==

ActionStep is an Actionscript 2.0 implementation of a subset
of the OpenStep Application Kit. The intent is to create an
open-source component framework for writing Rich Internet
Applications for the Flash Player.

More information can be found at:

  http://actionscript.org

And a wiki can be found here:

  http://osflash.org/doku.php?id=actionstep

This framework is a port of OpenStep and a major effort was
put forward to try and maintain continuity between the
original Objective-C API and this port to ActionScript.  The
naming convention of implementing the following Objective-C
API:

  [self sendAction:action to:target]

in ActionScript/ActionStep is:

  sendActionTo(action, target);

Constants are contained in classes in the package:

  org.actionstep.constant.*;

Also, it is common in AppKit to create components using an
alloc/init model.  This is maintained in ActionStep but uses
the 'new' operator of ActionScript

  [[NSButton alloc] initWithFrame:NSMakeRect(10,10,50,20)]

Becomes:

  (new NSButton()).initWithFrame(new NSRect(10,10,50,20));

We hope to provide tutorials on how to use the ActionStep
framework, but for now, the best documentation is the code
and the OpenStep or Cocoa documentation.

== Development Environment ==

To compile and build ActionStep you need the MTASC compiler.
This compiler is available for free/open-source from:

  http://www.mtasc.org

  OS X users install the latest binary from here:

  http://www.dynamicflash.com/mtasc/

== Compiling ==

To compile with TRACE output enabled (useful for debugging):

mtasc -cp "src" -swf ActionStep.swf -header 800:600:20 /
 -trace org.actionstep.ASDebugger.trace -pack org/actionstep /
 org/actionstep/test/ASTestMain -main

To compile without TRACE output enabled:

mtasc -cp "src" -swf ActionStep.swf -header 800:600:20 /
 -pack org/actionstep org/actionstep/test/ASTestMain -main

== Debugging ==

To debug your ActionStep code if you have debugging enabled (see
above) there is a handy Ruby script (debug) in the root directory
of ActionStep's directory.  To download Ruby see:

  http://www.ruby-lang.org

And then to run this script just open a terminal window and do:

  ruby debug

Then start your ActionStep project and it will connect (over a
TCP socket) to the Ruby debug process and start sending your
trace statements to it. Add this to your mtasc command:

  -trace org.actionstep.ASDebugger.trace

== License ==

ActionStep is licensed under a BSD-style license meaning it can
be used in open-source or closed-source projects.  We welcome
contributions back to ActionStep, but realize that many commerical
companies cannot release source due to customer requirements.  The
license can be found in the LICENSE file.
